---
import type { HTMLAttributes } from 'astro/types'

import Text from '@/components/Text.astro'
import Link from '@/components/Link.astro'
import Icon from '@/components/Icon.astro'

type types = 'link' | 'button' | 'submit'

interface Props extends Omit<HTMLAttributes<'button'>, 'type'> {
  type?: types
  href?: types extends 'link' ? string | null : never
  withIcon?: boolean
  as?: keyof typeof variants
}

const { withIcon = false, as = 'primary', type, href = null, class: extraClass } = Astro.props

const variants = {
  primary: 'bg-sky-600 text-sky-50',
  secondary: 'bg-transparent border-black text-black'
} as const
---

<button class:list={[variants[as], ' flex items-center justify-center rounded-lg p-3 text-sm font-medium', extraClass]}>
  {withIcon && <Icon />}

  {
    type === 'link'
      ? (
      <Link class="flex items-center" href={href}>
        <slot />
      </Link>
        )
      : (
      <Text>
        <slot />
      </Text>
        )
  }
</button>
